$date
	Sun Dec  3 18:43:25 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tiny_calculator_tb $end
$var wire 7 ! HEX3 [6:0] $end
$var wire 7 " HEX2 [6:0] $end
$var wire 7 # HEX1 [6:0] $end
$var wire 7 $ HEX0 [6:0] $end
$var reg 8 % SW [7:0] $end
$scope module dut $end
$var wire 8 & SW [7:0] $end
$var wire 5 ' l_sum [4:0] $end
$var wire 7 ( HEX3 [6:0] $end
$var wire 7 ) HEX2 [6:0] $end
$var wire 7 * HEX1 [6:0] $end
$var wire 7 + HEX0 [6:0] $end
$scope module decoder_Hex0 $end
$var wire 4 , i_binary_number [3:0] $end
$var reg 7 - o_display [6:0] $end
$upscope $end
$scope module decoder_Hex1 $end
$var wire 4 . i_binary_number [3:0] $end
$var reg 7 / o_display [6:0] $end
$upscope $end
$scope module decoder_Hex2 $end
$var wire 4 0 i_binary_number [3:0] $end
$var reg 7 1 o_display [6:0] $end
$upscope $end
$scope module decoder_Hex3 $end
$var wire 4 2 i_binary_number [3:0] $end
$var reg 7 3 o_display [6:0] $end
$upscope $end
$scope module ripple_adder $end
$var wire 4 4 i_a [3:0] $end
$var wire 4 5 i_b [3:0] $end
$var wire 1 6 s3 $end
$var wire 1 7 s2 $end
$var wire 1 8 s1 $end
$var wire 1 9 s0 $end
$var wire 5 : o_s [4:0] $end
$var wire 1 ; c3 $end
$var wire 1 < c2 $end
$var wire 1 = c1 $end
$var wire 1 > c0 $end
$scope module FA0 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A c_in $end
$var wire 1 > c_out $end
$var wire 1 B s1 $end
$var wire 1 9 s $end
$var wire 1 C c2 $end
$var wire 1 D c1 $end
$scope module ha1 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 D c $end
$var wire 1 B s $end
$upscope $end
$scope module ha2 $end
$var wire 1 B a $end
$var wire 1 A b $end
$var wire 1 C c $end
$var wire 1 9 s $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 > c_in $end
$var wire 1 = c_out $end
$var wire 1 G s1 $end
$var wire 1 8 s $end
$var wire 1 H c2 $end
$var wire 1 I c1 $end
$scope module ha1 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 I c $end
$var wire 1 G s $end
$upscope $end
$scope module ha2 $end
$var wire 1 G a $end
$var wire 1 > b $end
$var wire 1 H c $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 = c_in $end
$var wire 1 < c_out $end
$var wire 1 L s1 $end
$var wire 1 7 s $end
$var wire 1 M c2 $end
$var wire 1 N c1 $end
$scope module ha1 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 N c $end
$var wire 1 L s $end
$upscope $end
$scope module ha2 $end
$var wire 1 L a $end
$var wire 1 = b $end
$var wire 1 M c $end
$var wire 1 7 s $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 < c_in $end
$var wire 1 ; c_out $end
$var wire 1 Q s1 $end
$var wire 1 6 s $end
$var wire 1 R c2 $end
$var wire 1 S c1 $end
$scope module ha1 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 S c $end
$var wire 1 Q s $end
$upscope $end
$scope module ha2 $end
$var wire 1 Q a $end
$var wire 1 < b $end
$var wire 1 R c $end
$var wire 1 6 s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
1B
0A
0@
1?
0>
0=
0<
0;
b1 :
19
08
07
06
b0 5
b1 4
b1000000 3
b0 2
b1111001 1
b1 0
b1000000 /
b0 .
b1111001 -
b1 ,
b1111001 +
b1000000 *
b1111001 )
b1000000 (
b1 '
b1 &
b1 %
b1111001 $
b1000000 #
b1111001 "
b1000000 !
$end
#10
b0 "
b0 )
b0 1
16
b1000 0
1<
b1000 '
b1000 :
09
1M
1=
0B
1L
1I
b10 $
b10 +
b10 -
b100100 #
b100100 *
b100100 /
0?
1E
1J
1F
b110 ,
b10 .
b110 4
b10 5
b100110 %
b100110 &
#20
b1000110 "
b1000110 )
b1000110 1
b1100 0
1H
1>
0M
b1100 '
b1100 :
17
0I
1G
1D
1N
0L
b10010 $
b10010 +
b10010 -
b1111000 #
b1111000 *
b1111000 /
1?
0E
1@
1K
b101 ,
b111 .
b101 4
b111 5
b1110101 %
b1110101 &
#30
07
b1000000 "
b1000000 )
b1000000 1
b1111001 !
b1111001 (
b1111001 3
0=
b0 0
06
b1 2
0>
0H
08
0<
b10000 '
b10000 :
1;
0D
0G
0N
1S
b0 $
b0 +
b0 -
b0 #
b0 *
b0 /
0?
0J
1O
0@
0F
0K
1P
b1000 ,
b1000 .
b1000 4
b1000 5
b10001000 %
b10001000 &
#40
b110 "
b110 )
b110 1
b1110 0
18
17
b11110 '
b11110 :
16
1>
1=
1<
1D
1I
1N
b1110 $
b1110 +
b1110 -
b1110 #
b1110 *
b1110 /
1?
1E
1J
1@
1F
1K
b1111 ,
b1111 .
b1111 4
b1111 5
b11111111 %
b11111111 &
#50
